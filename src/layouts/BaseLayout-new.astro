---
import { SITE } from '../config'
import BaseHead from '../components/BaseHead.astro';
import Container from "../components/Container.astro";
import Header from "../components/Header-new.astro";
import Footer from "../components/Footer.astro";
import '../assets/styles/custom.css';
const { content } = Astro.props ;
import { ViewTransitions } from 'astro:transitions';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={ content.title ? `${content.title} | ${ SITE.title }` : SITE.title } description={ content.description } image={SITE.image}/>

          <script>
            const setDarkMode = () => {
              if (localStorage.darkMode === 'true' || (!('darkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                document.documentElement.classList.add('dark');
                localStorage.darkMode = 'true';
              } else {
                document.documentElement.classList.remove('dark');
                localStorage.darkMode = 'false';
              }
            }
        
            setDarkMode();
            // Runs on view transitions navigation
            document.addEventListener('astro:after-swap', setDarkMode);
        
            const setDarkModeButton = () => {
              const button = document.querySelector("#themeToggle");
              if (button) {  // Check if button is found before attempting to add event listener
                button.addEventListener('click', function () {
                  document.documentElement.classList.toggle('dark');
        
                  if (document.documentElement.classList.contains('dark')) {
                    localStorage.darkMode = 'true';
                  } else {
                    localStorage.darkMode = 'false';
                  }
                });
              }
            }
        
            setDarkModeButton();
            // Runs on view transitions navigation
            document.addEventListener('astro:after-swap', setDarkModeButton);
          </script>
        
          
 <ViewTransitions />          

  </head>
  <body class="antialiased text-slate-500 dark:text-slate-400 bg-white dark:bg-slate-900">
    <!-- <Header1 /> -->
    <Header/>
    <div class="relative">
      <Container>  
          <div class="relative pt-36 pb-10 ml-auto">
              <slot />
          </div>
      <Container />
  </div>
    <Footer />
    
</body>
</html>
