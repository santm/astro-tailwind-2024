---
// One day implement Astro icon
---
<button id="themeToggle" aria-label="switch theme" class="switcher group relative size-9 rounded-full before:absolute before:inset-0 before:rounded-full before:border before:border-gray-200 before:bg-gray-50 before:bg-gradient-to-b before:transition-transform before:duration-300 hover:before:scale-105 active:duration-75 active:before:scale-95 dark:before:border-gray-700 dark:before:bg-gray-800">
	<svg xmlns="http://www.w3.org/2000/svg" class="transistion relative m-auto hidden size-5 fill-gray-500 duration-300 group-hover:rotate-180 group-hover:fill-yellow-400 dark:block dark:fill-gray-300" viewBox="0 0 32 32" fill="currentColor">
		<clipPath id="theme-toggle__within__clip">
			<path d="M0 0h32v32h-32ZM6 16A1 1 0 0026 16 1 1 0 006 16" />
		</clipPath>
		<g clip-path="url(#theme-toggle__within__clip)">
			<path d="M30.7 21.3 27.1 16l3.7-5.3c.4-.5.1-1.3-.6-1.4l-6.3-1.1-1.1-6.3c-.1-.6-.8-.9-1.4-.6L16 5l-5.4-3.7c-.5-.4-1.3-.1-1.4.6l-1 6.3-6.4 1.1c-.6.1-.9.9-.6 1.3L4.9 16l-3.7 5.3c-.4.5-.1 1.3.6 1.4l6.3 1.1 1.1 6.3c.1.6.8.9 1.4.6l5.3-3.7 5.3 3.7c.5.4 1.3.1 1.4-.6l1.1-6.3 6.3-1.1c.8-.1 1.1-.8.7-1.4zM16 25.1c-5.1 0-9.1-4.1-9.1-9.1 0-5.1 4.1-9.1 9.1-9.1s9.1 4.1 9.1 9.1c0 5.1-4 9.1-9.1 9.1z" />
		</g>
		<path class="theme-toggle__within__circle" d="M16 7.7c-4.6 0-8.2 3.7-8.2 8.2s3.6 8.4 8.2 8.4 8.2-3.7 8.2-8.2-3.6-8.4-8.2-8.4zm0 14.4c-3.4 0-6.1-2.9-6.1-6.2s2.7-6.1 6.1-6.1c3.4 0 6.1 2.9 6.1 6.2s-2.7 6.1-6.1 6.1z" />
		<path class="theme-toggle__within__inner" d="M16 9.5c-3.6 0-6.4 2.9-6.4 6.4s2.8 6.5 6.4 6.5 6.4-2.9 6.4-6.4-2.8-6.5-6.4-6.5z" />
	</svg>
	<svg xmlns="http://www.w3.org/2000/svg" class="transistion relative m-auto size-5 fill-gray-500 duration-300 group-hover:-rotate-90 group-hover:fill-blue-900 dark:hidden" viewBox="0 0 20 20" fill="currentColor">
		<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
	</svg>
</button>
<script>
            const setDarkMode = () => {
            if (localStorage.darkMode === 'true' || (!('darkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
              document.documentElement.classList.add('dark');
              localStorage.darkMode = 'true';
            } else {
              document.documentElement.classList.remove('dark');
              localStorage.darkMode = 'false';
            }
          };
          
          setDarkMode();
          // Runs on view transitions navigation
          document.addEventListener('astro:after-swap', setDarkMode);
          
          const setDarkModeButton = () => {
            const button = document.querySelector("#themeToggle");
            if (button) {  // Check if button is found before attempting to add event listener
              button.addEventListener('click', function () {
                document.documentElement.classList.toggle('dark');
          
                if (document.documentElement.classList.contains('dark')) {
                  localStorage.darkMode = 'true';
                } else {
                  localStorage.darkMode = 'false';
                }
              });
            }
          };
          
          setDarkModeButton();
          // Runs on view transitions navigation
          document.addEventListener('astro:after-swap', setDarkModeButton);
          </script>
          
